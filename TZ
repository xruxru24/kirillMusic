Введение
Название проекта: SoundFlow
Цель: Создание приложения для прослушивания музыки на компьютере, с возможностью локальной регистрации, создания плейлистов и отслеживания статистики прослушиваний.
Требования к проекту
локальной регистрации и авторизации пользователя.
Хранение данных пользователей в локальной базе данных.
Возможность загружать и прослушивать музыкальные файлы.
Поддержка основных функций проигрывания: пауза, промотка, регулировка громкости.
Пользователь может добавлять свои музыкальные файлы.
Подсчёт количества прослушанных треков.
Архитектура системы
Язык программирования: Python.
Фреймворк для UI: PyQt6.
База данных: SQLite.
Общая структура: приложение с клиентской частью для взаимодействия с пользователем и базой данных для хранения всех данных.
В приложение будет 3 окна и за каждую из окон будет отдельный класс
1 класс - Authorization(вход, регестрация) 2 ссылки на вход и регестрацию
2 класс - Login (вход) подключены к базе данных
3 класс Register (регистрицая)  подключены к базе данных
4 класс PlayerMusic прослушивание треков пауза, плей, увеличение/уменьшие громкости, перемотка
Библиотека треков, отображается в виде текстового поля QTextEdit(не точно), куда можно добавлять треки. Пользователь может видеть список загруженных композиций и выбирать их для воспроизведения. Кнопка воспроизведения: кнопка Играть трек позволяет запустить выбранный трек из библиотеки. Кнопка загрузки трека: кнопка Загрузить трек открывает диалоговое окно для выбора аудиофайла на устройстве. Пользователь может добавлять новые треки в библиотеку, выбирая их из локальных файлов. вертикальный слайдер громкости
в приложении будут использоваться будут использованы виджеты: Vertical slider, Push Button, label, textEdit, FileDialog 

Интерфейс пользователя 
Окно регистрации/авторизации поля для ввода логина и пароля.
Основное окно на котором будет размещены плейлисты, плеер и его кнопки(громкость, паузы/воспроизведения, случайные прослушивание).

Логика работы системы
Регистрация/авторизация: Проверка уникальности логина.
Добавление музыки
Создание плейлистов: Возможность добавления папки с треками 
Подсчёт прослушиваний: Запись каждого прослушивания трека в базу данных, обновление счётчика.
Интеграция и взаимодействие
Взаимодействие между интерфейсом PyQt6 и базой данных SQLite.
Использование QtMultimedia для воспроизведения аудио.
Требования к развертыванию и поддержке
Операционная система: стабильная работа на Windows 10 возможна не стабильная работа на других платформах.
Установленные компоненты: Python, библиотеки PyQt6 и SQLite.
План реализации
Этап 1: Регистрация и авторизация
Этап 2: Функции прослушивания и управления музыкой.
Этап 3: Создание и управление плейлистами 
Этап 4: Подсчёт и отображение статистики прослушиваний 
Этап 5: Тестирование и исправление ошибок.
